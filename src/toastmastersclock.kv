#:import get_color kivy.utils.get_color_from_hex

<InterfaceWithSidebar>:
	canvas.before:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            pos: self.pos
            size: self.size

<SettingColorPicker>:
    Label:
        color: get_color(root.value) if root.value else (1,1,1,1.)
        text: root.value or ''

<Label>:
    font_size: 40
    color: 0,0,0,1
    markup: True

<Button>:
	background_normal: ''
    background_color: 1, .3, .4, .85
	canvas.after:
        Color:
            rgb: 0,0,0
        Line:
            rectangle: self.x+1,self.y+1,self.width-1,self.height-1

<ClockLabel@Label>:
    font_size: 30
	text: '00:00:00'

<TimerLabel@Label>:
    font_size: 60
	text: '[b]00:00.[size=40]00[/size][/b]'

<RootWidget>:
    canvas.before:
        Color:
            rgba: app.background
        Rectangle:
            pos: self.pos
            size: self.size

	BoxLayout:
	    orientation: 'vertical'

		BoxLayout:
	        orientation: 'horizontal'
	        size_hint_y: 0.3

			Spinner:
				id: category
				size_hint_x: 0.3
		        text: '< Select >'
		        values: app.categoryValues
			    on_text: app.category_changed(category.text)

			Spinner:
				id: speechName
				size_hint_x: 0.7
		        text: '< Select >'
		        values: app.speechNameValues

	    ClockLabel:
	        id: time

	    BoxLayout:
	        height: 90
	        orientation: 'horizontal'
	        padding: 20
	        spacing: 20
	        size_hint: (1, None)

	        Button:
	            id: start_stop
	            background_color: (1,0.3,0.3,1) if app.sw_started else (0.3,1,0.3,1)
                background_normal: ""
                #background_down: "" #optional if you want your color pressed
	            text: 'Start'
	            on_press: app.start_stop()

	        Button:
	            id: reset
	            text: 'Reset'
	            on_press: app.reset()

	    TimerLabel:
	        id: stopwatch

	    BoxLayout:
	        orientation: 'horizontal'

			Button:
	            size_hint_y: 0.5
	            text: 'Config'
                on_press: app.open_settings()

	        Label:
				size_hint: 0.2, 0.5

			Button:
	            size_hint_y: 0.5
	            font_size: 30
	            text: 'Reset\nsession'
	            disabled: True if not app.sessTimes else False
                on_press: app.session_reset()

			Label:
				size_hint: 0.2, 0.5

            Button:
	            size_hint_y: 0.5
	            font_size: 30
	            text: 'Session\nresults ({})'.format(len(app.sessTimes))
	            disabled: True if not app.sessTimes else False
                on_press: app.session_show()

			Label:
				size_hint: 0.2, 0.5

	        Button:
	            size_hint_y: 0.5
	            text: 'Exit'
                on_press: app.do_quit()

<sessLabel@Label>:
    font_size: 40
    color: 0,0,0,1
    #markup: True
    size_hint_y: None
    height: self.texture_size[1]
    background_color: 1, 1, 1, 1
    canvas.before:
        Color:
            rgba: root.background_color
        Rectangle:
            size: self.size
            pos: self.pos

<sessionResults>:
    orientation: 'vertical'
    canvas.before:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            pos: self.pos
            size: self.size

    Label:
        text: "Session Times"
        size_hint_y: 1

    RecycleView:
        id: session_rv
        size_hint_y: 7
        viewclass: 'sessLabel'

        RecycleBoxLayout:
            orientation: 'vertical'
            default_size: None, None
            default_size_hint: 1, None
            size_hint_y: None
            height: self.minimum_height

    Button:
        text: "Close Results"
        on_press: app.close_results()
        size_hint_y: 1

<ConfirmPopup>:
    height: content_id.height + 50
    width: '400dp'
    size_hint: (None, None)

    BoxLayout:
        orientation: 'vertical'
        id: content_id
        size_hint: (None, None)
        height: self.minimum_height + 25
        width: root.width - 25
        canvas.before:
            Color:
                rgba: 1,1,1,1
            Rectangle:
                pos: self.pos
                size: self.size
        Label:
            size_hint_y: None
            height: self.texture_size[1]
            text_size: (self.width, None)
            text: root.text
        GridLayout:
            cols: 2
            size_hint_y: None
            height: '44sp'
            Button:
                text: 'Yes'
                on_release: root.dispatch('on_answer',True)
            Button:
                text: 'No'
                on_release: root.dispatch('on_answer',False)